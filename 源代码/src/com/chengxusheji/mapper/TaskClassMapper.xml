<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.TaskClassMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加任务分类记录 -->
	<insert id="addTaskClass" parameterType="taskClass">
		insert into t_taskClass(taskClassName) values 
		(#{taskClassName})
	</insert>

	<!-- 按照查询条件分页查询任务分类记录 -->
	<select id="queryTaskClass" resultMap="taskClassMap" >
		select t_taskClass.* from t_taskClass ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="taskClassMap" type="taskClass">
        <id property="taskClassId" column="taskClassId" />
    </resultMap>

    <!-- 按照查询条件查询所有任务分类记录 -->
	<select id="queryTaskClassList" resultMap="taskClassMap" >
		select t_taskClass.* from t_taskClass ${where}
	</select>

    <!-- 按照查询条件的任务分类记录数 -->
	<select id="queryTaskClassCount" resultType="int">
		select count(*) from t_taskClass ${where}
	</select>

	<!-- 根据主键查询某个任务分类记录 -->
	<select id="getTaskClass" parameterType="int" resultMap="taskClassMap">
		select * from t_taskClass where t_taskClass.taskClassId = #{taskClassId}
	</select>

	<!-- 更新任务分类记录 -->
	<update id="updateTaskClass" parameterType="taskClass">
		update t_taskClass set taskClassName=#{taskClassName} where taskClassId = #{taskClassId}
	</update>

	<!-- 删除任务分类记录 -->
	<delete id="deleteTaskClass" parameterType="int">
		delete from t_taskClass where taskClassId=#{taskClassId}
	</delete>

</mapper>
